886. Possible Bipartition
Medium

We want to split a group of n people (labeled from 1 to n) into two groups of any size. Each person may dislike some other people, and they should not go into the same group.

Given the integer n and the array dislikes where dislikes[i] = [ai, bi] indicates that the person labeled ai does not like the person labeled bi, return true if it is possible to split everyone into two groups in this way.

Example 1:

Input: n = 4, dislikes = [[1,2],[1,3],[2,4]]
Output: true
Explanation: group1 [1,4] and group2 [2,3].
Example 2:

Input: n = 3, dislikes = [[1,2],[1,3],[2,3]]
Output: false
Example 3:

Input: n = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]
Output: false
 

Constraints:

1 <= n <= 2000
0 <= dislikes.length <= 104
dislikes[i].length == 2
1 <= dislikes[i][j] <= n
ai < bi
All the pairs of dislikes are unique.
Accepted
146.6K
Submissions
298.7K
Acceptance Rate
49.1%

ANSWER =>

class Solution {
public:
    bool bfs(int s,vector<vector<int>>& adj,vector<int>& color)
    {
        color[s]=1;
        queue<int> q;
        q.push(s);

        while(!q.empty())
        {
            int k=q.size();
            while(k--)
            {
                int u=q.front();
                q.pop();

                for(int i=0;i<adj[u].size();i++)
                {
                    if(color[adj[u][i]]==-1 && color[adj[u][i]]!=color[u])
                    {
                        color[adj[u][i]]=1-color[u];
                        q.push(adj[u][i]);
                    }
                    else if(color[adj[u][i]]==color[u]) return false;
                }
            }
        }
        return true;
    }

    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {
        vector<vector<int>> adj(n+1);

        for(int i=0;i<dislikes.size();i++)
        {
            adj[dislikes[i][0]].push_back(dislikes[i][1]);
            adj[dislikes[i][1]].push_back(dislikes[i][0]);
        }

        vector<int> color(n+1,-1);
        bool ans=1;

        for(int i=1;i<=n;i++)
        {
            if(color[i]==-1)
            {
                ans=bfs(i,adj,color);
                if(ans==0) return false;
            }
        }

        return true; 
    }
};
