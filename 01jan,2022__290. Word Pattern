290. Word Pattern
Easy

Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.
Accepted
423.3K
Submissions
1M
Acceptance Rate
40.6%

ANSWER =>

class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<char,string> m1;
        unordered_map<string,char> m2;

        int p1=0,p2=0;

        for(int i=0;i<pattern.size();i++)
        {
            string temp;

            if(i!=pattern.size()-1)
            {
                p2=s.find(' ',p1);      // p1 gives the starting point to find(stl).
                temp=s.substr(p1,p2-p1);
            }
            else temp=s.substr(p1,s.size()-p1);

            if(temp=="") return false;

            if(!m1.count(pattern[i])) m1[pattern[i]]=temp;
            if(!m2.count(temp)) m2[temp]=pattern[i];

            if(m1[pattern[i]]!=temp || m2[temp]!=pattern[i]) return false;

            p1=p2+1;
        }

        return true;
    }
};
