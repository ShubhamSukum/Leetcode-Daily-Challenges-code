1143. Longest Common Subsequence
Medium

Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.

A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

For example, "ace" is a subsequence of "abcde".
A common subsequence of two strings is a subsequence that is common to both strings.

Example 1:

Input: text1 = "abcde", text2 = "ace" 
Output: 3  
Explanation: The longest common subsequence is "ace" and its length is 3.
Example 2:

Input: text1 = "abc", text2 = "abc"
Output: 3
Explanation: The longest common subsequence is "abc" and its length is 3.
Example 3:

Input: text1 = "abc", text2 = "def"
Output: 0
Explanation: There is no such common subsequence, so the result is 0.
 

Constraints:

1 <= text1.length, text2.length <= 1000
text1 and text2 consist of only lowercase English characters.
Accepted
596.4K
Submissions
1M
Acceptance Rate
58.8%

ANSWER =>

class Solution {
public: // https://youtu.be/NnD96abizww
        int longestCommonSubsequence(string &a, string &b) {
        short m[1001][1001] = {};
        for (auto i = 0; i < a.size(); ++i)
            for (auto j = 0; j < b.size(); ++j)
                m[i + 1][j + 1] = a[i] == b[j] ? m[i][j] + 1 : max(m[i + 1][j], m[i][j + 1]);
        return m[a.size()][b.size()];
    }  
};

/* Memory Optimised

int find(string& text1,int n1,string& text2,int n2,vector<vector<int>>& dp)
    {
        if(n1<0 || n2<0) return 0;
        if(dp[n1][n2]!=-1) return dp[n1][n2];

        if(text1[n1]==text2[n2]) return dp[n1][n2]=1+find(text1,n1-1,text2,n2-1,dp);
        
        return dp[n1][n2]=max(find(text1,n1-1,text2,n2,dp),find(text1,n1,text2,n2-1,dp));
    }

    int longestCommonSubsequence(string text1, string text2) {
        int n1=text1.size();
        int n2=text2.size();

        vector<vector<int>> dp(n1,vector<int> (n2,-1));

        return find(text1,n1-1,text2,n2-1,dp);
    }
*/
