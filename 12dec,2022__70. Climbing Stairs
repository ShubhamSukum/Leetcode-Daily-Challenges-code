70. Climbing Stairs
Easy

You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 
Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
 

Constraints:

1 <= n <= 45
Accepted
2.1M
Submissions
4M
Acceptance Rate
51.9%

ANSWER =>

// My code
class Solution {
public:
    int climbStairs(int n) {
        if(n<=3) return n;
        
        int cal=0;
        vector<int> s(n,0);

        s[0]=1;
        s[1]=2;
        s[2]=3;

        for(int i=3;i<n;i++)
        {
            // cout<<s[i-2]<<" "<<s[i-1]<<endl;
            cal=s[i-2]+s[i-1];
            s[i]=cal; 
        }
        return s[n-1];
    }
};

// optimised 

class Solution {
public:
    int climbStairs(int n)
    {
        int prev, prev2;
        prev2 = 1;
        prev = 1;
        for(int i=2;i<=n;i++)
        {
            int cur = prev + prev2;
            prev2 = prev;
            prev = cur;
        }
        return prev;
    }
};
