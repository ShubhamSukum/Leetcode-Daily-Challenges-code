1207. Unique Number of Occurrences
Easy

Given an array of integers arr, return true if the number of occurrences of each value in the array is unique, or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

ANSWER =>

// MY Approach

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        bool check;
        map<int,int> mp;
        
        for(auto x:arr) mp[x]++;
        
        for(auto x :mp)
        {   
            for(auto y: mp)
            {
                if(x.first==y.first) continue;
                if(x.second==y.second) return false;
            }
        }
        return true;
    }
};

// Optimised ONE

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        
        map <int,int> m;
        set <int> s;
        
        for(auto itr:arr) m[itr]++;
        for(auto itr:m) s.insert(itr.second);

        if(s.size()==m.size()) return true;
        else return false;
    }
};
